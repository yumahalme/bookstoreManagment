version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bookstore_postgres
    environment:
      POSTGRES_DB: bookstore_inventory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookstore_inventory"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  app:
    build: .
    container_name: bookstore_app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: bookstore_inventory
      JWT_SECRET: your-256-bit-secret-key-here-change-in-production
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bookstore_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bookstore.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - bookstore_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  bookstore_network:
    driver: bridge
